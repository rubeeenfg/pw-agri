import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React from 'react';
import PropTypes from 'prop-types';

const CTableResponsiveWrapper = (_a) => {
    var { children, responsive } = _a, rest = __rest(_a, ["children", "responsive"]);
    return responsive ? (React.createElement("div", Object.assign({ className: typeof responsive === 'boolean' ? 'table-responsive' : `table-responsive-${responsive}` }, rest), children)) : (React.createElement(React.Fragment, null, children));
};
CTableResponsiveWrapper.propTypes = {
    children: PropTypes.node,
    responsive: PropTypes.oneOfType([
        PropTypes.bool,
        PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl']),
    ]),
};
CTableResponsiveWrapper.displayName = 'CTableResponsiveWrapper';

export { CTableResponsiveWrapper };
//# sourceMappingURL=CTableResponsiveWrapper.js.map
