import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { colorPropType } from '../../props.js';

const CTableRow = forwardRef((_a, ref) => {
    var { children, active, align, className, color } = _a, rest = __rest(_a, ["children", "active", "align", "className", "color"]);
    return (React.createElement("tr", Object.assign({ className: classNames({
            [`align-${align}`]: align,
            'table-active': active,
            [`table-${color}`]: color,
        }, className) || undefined }, rest, { ref: ref }), children));
});
CTableRow.propTypes = {
    active: PropTypes.bool,
    align: PropTypes.oneOf(['bottom', 'middle', 'top']),
    children: PropTypes.node,
    className: PropTypes.string,
    color: colorPropType,
};
CTableRow.displayName = 'CTableRow';

export { CTableRow };
//# sourceMappingURL=CTableRow.js.map
