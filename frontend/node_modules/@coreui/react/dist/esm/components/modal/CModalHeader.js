import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { CCloseButton } from '../close-button/CCloseButton.js';
import { CModalContext } from './CModalContext.js';

const CModalHeader = forwardRef((_a, ref) => {
    var { children, className, closeButton = true } = _a, rest = __rest(_a, ["children", "className", "closeButton"]);
    const { setVisible } = useContext(CModalContext);
    return (React.createElement("div", Object.assign({ className: classNames('modal-header', className) }, rest, { ref: ref }),
        children,
        closeButton && React.createElement(CCloseButton, { onClick: () => setVisible(false) })));
});
CModalHeader.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
    closeButton: PropTypes.bool,
};
CModalHeader.displayName = 'CModalHeader';

export { CModalHeader };
//# sourceMappingURL=CModalHeader.js.map
