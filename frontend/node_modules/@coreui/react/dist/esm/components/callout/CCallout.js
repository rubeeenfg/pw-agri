import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { colorPropType } from '../../props.js';

const CCallout = forwardRef((_a, ref) => {
    var { children, className, color } = _a, rest = __rest(_a, ["children", "className", "color"]);
    return (React.createElement("div", Object.assign({ className: classNames('callout', {
            [`callout-${color}`]: color,
        }, className) }, rest, { ref: ref }), children));
});
CCallout.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
    color: colorPropType,
};
CCallout.displayName = 'CCallout';

export { CCallout };
//# sourceMappingURL=CCallout.js.map
