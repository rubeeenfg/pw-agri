import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { textColorsPropType, shapePropType, colorPropType } from '../../props.js';

const CAvatar = forwardRef((_a, ref) => {
    var { children, className, color, shape, size, src, status, textColor } = _a, rest = __rest(_a, ["children", "className", "color", "shape", "size", "src", "status", "textColor"]);
    const statusClassName = status && classNames('avatar-status', `bg-${status}`);
    return (React.createElement("div", Object.assign({ className: classNames('avatar', {
            [`bg-${color}`]: color,
            [`avatar-${size}`]: size,
            [`text-${textColor}`]: textColor,
        }, shape, className) }, rest, { ref: ref }),
        src ? React.createElement("img", { src: src, className: "avatar-img" }) : children,
        status && React.createElement("span", { className: statusClassName })));
});
CAvatar.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
    color: colorPropType,
    shape: shapePropType,
    size: PropTypes.string,
    src: PropTypes.string,
    status: PropTypes.string,
    textColor: textColorsPropType,
};
CAvatar.displayName = 'CAvatar';

export { CAvatar };
//# sourceMappingURL=CAvatar.js.map
