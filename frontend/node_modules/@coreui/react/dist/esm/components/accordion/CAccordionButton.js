import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { CAccordionItemContext } from './CAccordionItemContext.js';

const CAccordionButton = forwardRef((_a, ref) => {
    var { children, className } = _a, rest = __rest(_a, ["children", "className"]);
    const { id, visible, setVisible } = useContext(CAccordionItemContext);
    return (React.createElement("button", Object.assign({ type: "button", className: classNames('accordion-button', { collapsed: !visible }, className), "aria-controls": id, "aria-expanded": visible, onClick: () => setVisible(!visible) }, rest, { ref: ref }), children));
});
CAccordionButton.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
};
CAccordionButton.displayName = 'CAccordionButton';

export { CAccordionButton };
//# sourceMappingURL=CAccordionButton.js.map
