import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import { CCloseButton } from '../close-button/CCloseButton.js';
import { CToastContext } from './CToastContext.js';

const CToastClose = forwardRef((_a, ref) => {
    var { children, as: Component } = _a, rest = __rest(_a, ["children", "as"]);
    const { setVisible } = useContext(CToastContext);
    return Component ? (React.createElement(Component, Object.assign({ onClick: () => setVisible(false) }, rest, { ref: ref }), children)) : (React.createElement(CCloseButton, Object.assign({ onClick: () => setVisible(false) }, rest, { ref: ref })));
});
CToastClose.propTypes = Object.assign(Object.assign({}, CCloseButton.propTypes), { as: PropTypes.elementType });
CToastClose.displayName = 'CToastClose';

export { CToastClose };
//# sourceMappingURL=CToastClose.js.map
