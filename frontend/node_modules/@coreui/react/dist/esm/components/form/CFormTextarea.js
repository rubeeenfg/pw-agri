import { __rest } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { CFormControlWrapper } from './CFormControlWrapper.js';

const CFormTextarea = forwardRef((_a, ref) => {
    var { children, className, feedback, feedbackInvalid, feedbackValid, floatingClassName, floatingLabel, id, invalid, label, plainText, text, tooltipFeedback, valid } = _a, rest = __rest(_a, ["children", "className", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "id", "invalid", "label", "plainText", "text", "tooltipFeedback", "valid"]);
    return (React.createElement(CFormControlWrapper, { describedby: rest['aria-describedby'], feedback: feedback, feedbackInvalid: feedbackInvalid, feedbackValid: feedbackValid, floatingClassName: floatingClassName, floatingLabel: floatingLabel, id: id, invalid: invalid, label: label, text: text, tooltipFeedback: tooltipFeedback, valid: valid },
        React.createElement("textarea", Object.assign({ className: classNames(plainText ? 'form-control-plaintext' : 'form-control', {
                'is-invalid': invalid,
                'is-valid': valid,
            }, className), id: id }, rest, { ref: ref }), children)));
});
CFormTextarea.propTypes = Object.assign({ className: PropTypes.string, id: PropTypes.string, plainText: PropTypes.bool }, CFormControlWrapper.propTypes);
CFormTextarea.displayName = 'CFormTextarea';

export { CFormTextarea };
//# sourceMappingURL=CFormTextarea.js.map
