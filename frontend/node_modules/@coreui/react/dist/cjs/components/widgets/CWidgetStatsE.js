'use strict';

var tslib_es6 = require('../../node_modules/tslib/tslib.es6.js');
var React = require('react');
var PropTypes = require('prop-types');
var index = require('../../_virtual/index.js');
var CCard = require('../card/CCard.js');
var CCardBody = require('../card/CCardBody.js');
require('../card/CCardFooter.js');
require('../card/CCardGroup.js');
require('../card/CCardHeader.js');
require('../card/CCardImage.js');
require('../card/CCardImageOverlay.js');
require('../card/CCardLink.js');
require('../card/CCardSubtitle.js');
require('../card/CCardText.js');
require('../card/CCardTitle.js');

const CWidgetStatsE = React.forwardRef((_a, ref) => {
    var { chart, className, title, value } = _a, rest = tslib_es6.__rest(_a, ["chart", "className", "title", "value"]);
    return (React.createElement(CCard.CCard, Object.assign({ className: index.default(className) }, rest, { ref: ref }),
        React.createElement(CCardBody.CCardBody, { className: "text-center" },
            title && (React.createElement("div", { className: "text-body-secondary small text-uppercase fw-semibold" }, title)),
            value && React.createElement("div", { className: "fs-6 fw-semibold py-3" }, value),
            chart)));
});
CWidgetStatsE.propTypes = {
    children: PropTypes.node,
    chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    className: PropTypes.string,
    title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),
};
CWidgetStatsE.displayName = 'CWidgetStatsE';

exports.CWidgetStatsE = CWidgetStatsE;
//# sourceMappingURL=CWidgetStatsE.js.map
