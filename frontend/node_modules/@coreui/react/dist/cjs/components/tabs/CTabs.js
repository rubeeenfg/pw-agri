'use strict';

var React = require('react');
var PropTypes = require('prop-types');
var index = require('../../_virtual/index.js');
var CTabsContext = require('./CTabsContext.js');

const CTabs = React.forwardRef(({ children, activeItemKey, className, defaultActiveItemKey, onChange }, ref) => {
    const id = React.useId();
    const isControlled = activeItemKey !== undefined;
    const [internalActiveItemKey, setInternalActiveItemKey] = React.useState(() => (isControlled ? undefined : defaultActiveItemKey));
    const currentActiveItemKey = isControlled ? activeItemKey : internalActiveItemKey;
    const setActiveItemKey = (value) => {
        if (!isControlled) {
            setInternalActiveItemKey(value);
        }
        onChange === null || onChange === void 0 ? void 0 : onChange(value);
    };
    return (React.createElement(CTabsContext.CTabsContext.Provider, { value: { _activeItemKey: currentActiveItemKey, setActiveItemKey, id } },
        React.createElement("div", { className: index.default('tabs', className), ref: ref }, children)));
});
CTabs.propTypes = {
    activeItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    children: PropTypes.node,
    className: PropTypes.string,
    defaultActiveItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    onChange: PropTypes.func,
};
CTabs.displayName = 'CTabs';

exports.CTabs = CTabs;
//# sourceMappingURL=CTabs.js.map
