'use strict';

var tslib_es6 = require('../../node_modules/tslib/tslib.es6.js');
var React = require('react');
var PropTypes = require('prop-types');
var index = require('../../_virtual/index.js');
var props = require('../../props.js');
var CProgressStackedContext = require('./CProgressStackedContext.js');

const CProgressBar = React.forwardRef((_a, ref) => {
    var { children, animated, className, color, value = 0, variant } = _a, rest = tslib_es6.__rest(_a, ["children", "animated", "className", "color", "value", "variant"]);
    const { stacked } = React.useContext(CProgressStackedContext.CProgressStackedContext);
    return (React.createElement("div", Object.assign({ className: index.default('progress-bar', {
            [`bg-${color}`]: color,
            [`progress-bar-${variant}`]: variant,
            'progress-bar-animated': animated,
        }, className) }, (!stacked && { style: { width: `${value}%` } }), rest, { ref: ref }), children));
});
CProgressBar.propTypes = {
    animated: PropTypes.bool,
    children: PropTypes.node,
    className: PropTypes.string,
    color: props.colorPropType,
    value: PropTypes.number,
    variant: PropTypes.oneOf(['striped']),
};
CProgressBar.displayName = 'CProgressBar';

exports.CProgressBar = CProgressBar;
//# sourceMappingURL=CProgressBar.js.map
