'use strict';

var tslib_es6 = require('../../node_modules/tslib/tslib.es6.js');
var React = require('react');
var PropTypes = require('prop-types');
var index = require('../../_virtual/index.js');
var CFormControlWrapper = require('./CFormControlWrapper.js');

const CFormTextarea = React.forwardRef((_a, ref) => {
    var { children, className, feedback, feedbackInvalid, feedbackValid, floatingClassName, floatingLabel, id, invalid, label, plainText, text, tooltipFeedback, valid } = _a, rest = tslib_es6.__rest(_a, ["children", "className", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "id", "invalid", "label", "plainText", "text", "tooltipFeedback", "valid"]);
    return (React.createElement(CFormControlWrapper.CFormControlWrapper, { describedby: rest['aria-describedby'], feedback: feedback, feedbackInvalid: feedbackInvalid, feedbackValid: feedbackValid, floatingClassName: floatingClassName, floatingLabel: floatingLabel, id: id, invalid: invalid, label: label, text: text, tooltipFeedback: tooltipFeedback, valid: valid },
        React.createElement("textarea", Object.assign({ className: index.default(plainText ? 'form-control-plaintext' : 'form-control', {
                'is-invalid': invalid,
                'is-valid': valid,
            }, className), id: id }, rest, { ref: ref }), children)));
});
CFormTextarea.propTypes = Object.assign({ className: PropTypes.string, id: PropTypes.string, plainText: PropTypes.bool }, CFormControlWrapper.CFormControlWrapper.propTypes);
CFormTextarea.displayName = 'CFormTextarea';

exports.CFormTextarea = CFormTextarea;
//# sourceMappingURL=CFormTextarea.js.map
